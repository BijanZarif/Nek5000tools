c     The accompanying usr file "zav.usr'  shows how the z_avg routine can
c     be used to average a field in the z-direction and copy the data to all
c     the nodes.
c     USER INPUT:  nelxy - number of elements in 2D (integer)
c                  u 	 - the field to be averaged. (example: vx,vy,vz)
c                  ua    - the resulting averaged field
c
c     common usage
c      integer gs_avg_hndl
c      save    gs_avg_hndl
c      data    gs_avg_hndl / 0 /
c      common /scrcg/ pm1 (lx1,ly1,lz1,lelv)
c     $    ,pa (lx1,ly2,lz2)     ,pb (lx1,ly1,lz2)
c      real vxa(lx1*ly1*lz1*lelt)
c      real vya(lx1*ly1*lz1*lelt)
c      real vza(lx1*ly1*lz1*lelt)
c      real pma(lx1*ly1*lz1*lelt)
c
c
c      nelxy = 160
c      ifld  = 1
c      call mappr(pm1,p,pa,pb)
c      call z_avg(vxa,vx,gs_avg_hndl,nelxy,ifld)
c      call z_avg(vya,vy,gs_avg_hndl,nelxy,ifld)
c      call z_avg(vza,vz,gs_avg_hndl,nelxy,ifld)
c      call z_avg(pma,pm1,gs_avg_hndl,nelxy,ifld)

c      call outpost(vxa,vya,vza,pma,t,'   ')
c
c
c
c

c-----------------------------------------------------------------------
      subroutine z_avg(ua,u,gs_avg_hndl,nelxy,ifld)
      include 'SIZE'
      include 'TOTAL'

c     Compute the z average of quantity u() - assumes global tens.prod.
      real u (lx1,ly1,lz1,lelt)
      real ua(lx1,ly1,lz1,lelt)
      integer gs_avg_hndl,e,ex,ey,ez,eg

      if (gs_avg_hndl.eq.0) then
          call set_gs_zavg_hndl(gs_avg_hndl,nelxy,ifld)
      endif

      nel = nelfld(ifld)
      n   = nx1*ny1*nz1*nel

      call copy(ua,bm1,n)              ! Set the averaging weights
      call gs_op(gs_avg_hndl,ua,1,1,0) ! Sum weights over columns


      do i=1,n                          ! ua = (w_j*u_j)/( sum_i w_i)
         ua(i,1,1,1) = bm1(i,1,1,1)*u(i,1,1,1)/ua(i,1,1,1)
      enddo

      call gs_op(gs_avg_hndl,ua,1,1,0) ! Sum weighted values


      return
      end
c-----------------------------------------------------------------------
      subroutine set_gs_zavg_hndl(gs_avg_hndl,nelxy,ifld)

c     Set the z-average handle

      include 'SIZE'
      include 'TOTAL'

      integer gs_avg_hndl,e,ex,ey,ez,eg

      common /nekmpi/ mid,mp,nekcomm,nekgroup,nekreal

      common /c_is1/ glo_num(lx1,ly1,lz1,lelv)
      integer*8 glo_num,ex_g


      nel = nelfld(ifld)
      do e=1,nel
         eg = lglel(e)
         call get_exyz(ex,ey,ez,eg,nelxy,1,1)

         ex_g = ex       ! Ensure int*8 promotion
         do k=1,nz1      ! Enumerate points in the x-y plane
            do j=1,ny1
            do i=1,nx1
               glo_num(i,j,k,e) = i+nx1*(j-1) + nx1*ny1*(ex_g-1)
            enddo
            enddo
         enddo

      enddo

      n = nel*nx1*ny1*nz1

      call gs_setup(gs_avg_hndl,glo_num,n,nekcomm,mp)

      return
      end
c-----------------------------------------------------------------------
